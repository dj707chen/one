#!/bin/bash

function dependencies() {
  TEXT=''
  MOD="$1"
  for D in $(grep "$MOD\/."'*'":" refs | cut -d: -f2 | tr ' ' '\n' | cut -d/ -f1 | sort | uniq | grep -v "$MOD" | grep -v '^$'); do
    I="$(echo $D | cut -d'/' -f2)"
    N="$(tr '[:lower:]' '[:upper:]' <<< ${I:0:1})${I:1}"
    TEXT="$TEXT [![$N](https://github.com/propensive/$D/raw/main/doc/images/128x128.png)](https://github.com/propensive/$D/) &nbsp;"
  done
  if [[ "$TEXT" = "" ]]; then
    echo "_${TITLE}_ has no dependencies."
  else
    echo "The following _Niveau_ libraries are dependencies of _${TITLE}_:"
    echo ""
    echo $TEXT
  fi
}

function dependents() {
  MOD="$1"
  TEXT=''
  for D in $(grep "."'*'":."'*'"$MOD" refs | cut -d'/' -f1 | sort | uniq | grep -v "$MOD" | grep -v '^$'); do
    I="$(echo $D | cut -d'/' -f2)"
    N="$(tr '[:lower:]' '[:upper:]' <<< ${I:0:1})${I:1}"
    TEXT="$TEXT [![$N](https://github.com/propensive/$D/raw/main/doc/images/128x128.png)](https://github.com/propensive/$D/) &nbsp;"
  done
  if [[ "$TEXT" = "" ]]; then
    echo "No other _Niveau_ libraries are dependents of _${TITLE}_."
  else
    echo "The following _Niveau_ libraries are dependents of _${TITLE}_:"
    echo ""
    echo $TEXT
  fi
}

for MOD in mod/*
do
  printf "Generating docs for $MOD..."
  export ID="$(echo $MOD | cut -d'/' -f2)"
  export TITLE="$(tr '[:lower:]' '[:upper:]' <<< ${ID:0:1})${ID:1}"
  export START="$(git --git-dir mod/$ID/.git  show -s --format=%ci $(git --git-dir mod/$ID/.git rev-list --max-parents=0 HEAD) | cut -d- -f1)"
  export STATUS="$(cat $MOD/doc/status)"
  export BASICS="$(cat $MOD/doc/basics | tr '\n' '¶')"
  export FEATURES="$(cat $MOD/doc/features | tr '\n' '¶')"
  export INTRO="$(cat $MOD/doc/intro)"
  export NAME="$(cat $MOD/doc/name)"
  export YEAR="$(date "+%Y")"
  if [[ "$START" = "$YEAR" ]]; then
    export COPYRIGHT="$START"
  else
    export COPYRIGHT="${START}-$(date +%y)"
  fi
  export VERSION="$(cat $MOD/doc/version)"
  export THANKS="$(cat $MOD/doc/thanks 2> /dev/null || echo '')"
  export DEPENDENCIES="$(dependencies $ID)"
  export DEPENDENTS="$(dependents $ID)"

  export LOC=$(cloc $MOD/src --quiet --json | jq .Scala.code)
  printf '.'
  cat tmpl/readme.md | envsubst | tr '¶' '\n' > $MOD/readme.md
  printf '.'
  cat tmpl/contributing.md | envsubst | tr '¶' '\n' > $MOD/contributing.md
  printf '.'
  cp tmpl/license.md $MOD/license.md
  printf '.'
  printf "done\n"
done

